// <auto-generated />
using System;
using System.Collections.Generic;
using LearningAppNetCoreApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LearningAppNetCoreApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250813005806_EditPathItemTemplateForNewForkingArchitecture")]
    partial class EditPathItemTemplateForNewForkingArchitecture
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LearningAppNetCoreApi.Models.PathItemTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<int>("PathTemplateId")
                        .HasColumnType("integer")
                        .HasColumnName("path_template_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<int?>("UserPathId")
                        .HasColumnType("integer")
                        .HasColumnName("user_path_id");

                    b.HasKey("Id")
                        .HasName("pk_path_item_templates");

                    b.HasIndex("PathTemplateId")
                        .HasDatabaseName("ix_path_item_templates_path_template_id");

                    b.HasIndex("UserPathId")
                        .HasDatabaseName("ix_path_item_templates_user_path_id");

                    b.ToTable("path_item_templates", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.PathReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<int>("PathTemplateId")
                        .HasColumnType("integer")
                        .HasColumnName("path_template_id");

                    b.Property<string>("ResolutionMessage")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("resolution_message");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<bool>("UserAcknowledged")
                        .HasColumnType("boolean")
                        .HasColumnName("user_acknowledged");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_path_reports");

                    b.HasIndex("PathTemplateId")
                        .HasDatabaseName("ix_path_reports_path_template_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_path_reports_user_id");

                    b.ToTable("path_reports", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.PathTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("integer")
                        .HasColumnName("category");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("GeneratedFromPrompt")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("generated_from_prompt");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_path_templates");

                    b.ToTable("path_templates", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.PathTemplateRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirebaseUid")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("firebase_uid");

                    b.Property<int>("PathTemplateId")
                        .HasColumnType("integer")
                        .HasColumnName("path_template_id");

                    b.Property<DateTime>("RatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("rated_at");

                    b.Property<int>("Rating")
                        .HasColumnType("integer")
                        .HasColumnName("rating");

                    b.HasKey("Id")
                        .HasName("pk_path_template_ratings");

                    b.HasIndex("PathTemplateId")
                        .HasDatabaseName("ix_path_template_ratings_path_template_id");

                    b.ToTable("path_template_ratings", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.QuizFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("QuizTemplateId")
                        .HasColumnType("integer")
                        .HasColumnName("quiz_template_id");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("submitted_at");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<bool>("WasHelpful")
                        .HasColumnType("boolean")
                        .HasColumnName("was_helpful");

                    b.HasKey("Id")
                        .HasName("pk_quiz_feedbacks");

                    b.HasIndex("QuizTemplateId")
                        .HasDatabaseName("ix_quiz_feedbacks_quiz_template_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_quiz_feedbacks_user_id");

                    b.ToTable("quiz_feedbacks", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.QuizQuestionTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CorrectAnswerIndex")
                        .HasColumnType("integer")
                        .HasColumnName("correct_answer_index");

                    b.Property<List<string>>("Options")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("options");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("question_text");

                    b.Property<int>("QuizTemplateId")
                        .HasColumnType("integer")
                        .HasColumnName("quiz_template_id");

                    b.HasKey("Id")
                        .HasName("pk_quiz_question_templates");

                    b.HasIndex("QuizTemplateId")
                        .HasDatabaseName("ix_quiz_question_templates_quiz_template_id");

                    b.ToTable("quiz_question_templates", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.QuizResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("completed_at");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("boolean")
                        .HasColumnName("is_complete");

                    b.Property<int>("QuizTemplateId")
                        .HasColumnType("integer")
                        .HasColumnName("quiz_template_id");

                    b.Property<int>("Score")
                        .HasColumnType("integer")
                        .HasColumnName("score");

                    b.Property<int>("TotalQuestions")
                        .HasColumnType("integer")
                        .HasColumnName("total_questions");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_quiz_results");

                    b.HasIndex("QuizTemplateId")
                        .HasDatabaseName("ix_quiz_results_quiz_template_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_quiz_results_user_id");

                    b.ToTable("quiz_results", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.QuizTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("PathTemplateId")
                        .HasColumnType("integer")
                        .HasColumnName("path_template_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_quiz_templates");

                    b.HasIndex("PathTemplateId")
                        .HasDatabaseName("ix_quiz_templates_path_template_id");

                    b.ToTable("quiz_templates", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.ResourceTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PathItemTemplateId")
                        .HasColumnType("integer")
                        .HasColumnName("path_item_template_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<string>("Url")
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_resource_templates");

                    b.HasIndex("PathItemTemplateId")
                        .HasDatabaseName("ix_resource_templates_path_item_template_id");

                    b.ToTable("resource_templates", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("email");

                    b.Property<string>("FcmToken")
                        .HasColumnType("text")
                        .HasColumnName("fcm_token");

                    b.Property<string>("FirebaseUid")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("firebase_uid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_login_date");

                    b.Property<DateTime>("LastUsageResetDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_usage_reset_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool>("NotificationsEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("notifications_enabled");

                    b.Property<int>("PathsExtendedThisMonth")
                        .HasColumnType("integer")
                        .HasColumnName("paths_extended_this_month");

                    b.Property<int>("PathsGeneratedThisMonth")
                        .HasColumnType("integer")
                        .HasColumnName("paths_generated_this_month");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("phone_number");

                    b.Property<int>("QuizzesCreatedThisMonth")
                        .HasColumnType("integer")
                        .HasColumnName("quizzes_created_this_month");

                    b.Property<DateTime?>("SubscriptionExpiryDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("subscription_expiry_date");

                    b.Property<int>("Tier")
                        .HasColumnType("integer")
                        .HasColumnName("tier");

                    b.Property<int>("TotalPathsStarted")
                        .HasColumnType("integer")
                        .HasColumnName("total_paths_started");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("FirebaseUid")
                        .IsUnique()
                        .HasDatabaseName("ix_users_firebase_uid");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.UserPath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PathTemplateId")
                        .HasColumnType("integer")
                        .HasColumnName("path_template_id");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("started_at");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_paths");

                    b.HasIndex("PathTemplateId")
                        .HasDatabaseName("ix_user_paths_path_template_id");

                    b.HasIndex("UserId", "PathTemplateId")
                        .IsUnique()
                        .HasDatabaseName("ix_user_paths_user_id_path_template_id");

                    b.ToTable("user_paths", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.UserQuizAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer")
                        .HasColumnName("question_id");

                    b.Property<int>("QuizResultId")
                        .HasColumnType("integer")
                        .HasColumnName("quiz_result_id");

                    b.Property<int>("SelectedAnswerIndex")
                        .HasColumnType("integer")
                        .HasColumnName("selected_answer_index");

                    b.Property<bool>("WasCorrect")
                        .HasColumnType("boolean")
                        .HasColumnName("was_correct");

                    b.HasKey("Id")
                        .HasName("pk_user_quiz_answers");

                    b.HasIndex("QuizResultId")
                        .HasDatabaseName("ix_user_quiz_answers_quiz_result_id");

                    b.ToTable("user_quiz_answers", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.UserResourceProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_completed");

                    b.Property<int>("ResourceTemplateId")
                        .HasColumnType("integer")
                        .HasColumnName("resource_template_id");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_resource_progress");

                    b.HasIndex("ResourceTemplateId")
                        .HasDatabaseName("ix_user_resource_progress_resource_template_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_user_resource_progress_user_id");

                    b.ToTable("user_resource_progress", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.WaitlistEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("email");

                    b.Property<string>("Platforms")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("platforms");

                    b.HasKey("Id")
                        .HasName("pk_waitlist_entries");

                    b.ToTable("waitlist_entries", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.PathItemTemplate", b =>
                {
                    b.HasOne("LearningAppNetCoreApi.Models.PathTemplate", "PathTemplate")
                        .WithMany("PathItems")
                        .HasForeignKey("PathTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_path_item_templates_path_templates_path_template_id");

                    b.HasOne("LearningAppNetCoreApi.Models.UserPath", "UserPath")
                        .WithMany()
                        .HasForeignKey("UserPathId")
                        .HasConstraintName("fk_path_item_templates_user_paths_user_path_id");

                    b.Navigation("PathTemplate");

                    b.Navigation("UserPath");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.PathReport", b =>
                {
                    b.HasOne("LearningAppNetCoreApi.Models.PathTemplate", "PathTemplate")
                        .WithMany()
                        .HasForeignKey("PathTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_path_reports_path_templates_path_template_id");

                    b.HasOne("LearningAppNetCoreApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_path_reports_users_user_id");

                    b.Navigation("PathTemplate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.PathTemplateRating", b =>
                {
                    b.HasOne("LearningAppNetCoreApi.Models.PathTemplate", "PathTemplate")
                        .WithMany("Ratings")
                        .HasForeignKey("PathTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_path_template_ratings_path_templates_path_template_id");

                    b.Navigation("PathTemplate");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.QuizFeedback", b =>
                {
                    b.HasOne("LearningAppNetCoreApi.Models.QuizTemplate", "QuizTemplate")
                        .WithMany()
                        .HasForeignKey("QuizTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_quiz_feedbacks_quiz_templates_quiz_template_id");

                    b.HasOne("LearningAppNetCoreApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_quiz_feedbacks_users_user_id");

                    b.Navigation("QuizTemplate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.QuizQuestionTemplate", b =>
                {
                    b.HasOne("LearningAppNetCoreApi.Models.QuizTemplate", "QuizTemplate")
                        .WithMany("Questions")
                        .HasForeignKey("QuizTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_quiz_question_templates_quiz_templates_quiz_template_id");

                    b.Navigation("QuizTemplate");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.QuizResult", b =>
                {
                    b.HasOne("LearningAppNetCoreApi.Models.QuizTemplate", "QuizTemplate")
                        .WithMany()
                        .HasForeignKey("QuizTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_quiz_results_quiz_templates_quiz_template_id");

                    b.HasOne("LearningAppNetCoreApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_quiz_results_users_user_id");

                    b.Navigation("QuizTemplate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.QuizTemplate", b =>
                {
                    b.HasOne("LearningAppNetCoreApi.Models.PathTemplate", "PathTemplate")
                        .WithMany()
                        .HasForeignKey("PathTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_quiz_templates_path_templates_path_template_id");

                    b.Navigation("PathTemplate");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.ResourceTemplate", b =>
                {
                    b.HasOne("LearningAppNetCoreApi.Models.PathItemTemplate", "PathItemTemplate")
                        .WithMany("Resources")
                        .HasForeignKey("PathItemTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_resource_templates_path_item_templates_path_item_template_id");

                    b.Navigation("PathItemTemplate");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.UserPath", b =>
                {
                    b.HasOne("LearningAppNetCoreApi.Models.PathTemplate", "PathTemplate")
                        .WithMany("UserPaths")
                        .HasForeignKey("PathTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_paths_path_templates_path_template_id");

                    b.HasOne("LearningAppNetCoreApi.Models.User", "User")
                        .WithMany("UserPaths")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_paths_users_user_id");

                    b.Navigation("PathTemplate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.UserQuizAnswer", b =>
                {
                    b.HasOne("LearningAppNetCoreApi.Models.QuizResult", "QuizResult")
                        .WithMany("UserAnswers")
                        .HasForeignKey("QuizResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_quiz_answers_quiz_results_quiz_result_id");

                    b.Navigation("QuizResult");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.UserResourceProgress", b =>
                {
                    b.HasOne("LearningAppNetCoreApi.Models.ResourceTemplate", "ResourceTemplate")
                        .WithMany()
                        .HasForeignKey("ResourceTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_resource_progress_resource_templates_resource_template");

                    b.HasOne("LearningAppNetCoreApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_resource_progress_users_user_id");

                    b.Navigation("ResourceTemplate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.PathItemTemplate", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.PathTemplate", b =>
                {
                    b.Navigation("PathItems");

                    b.Navigation("Ratings");

                    b.Navigation("UserPaths");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.QuizResult", b =>
                {
                    b.Navigation("UserAnswers");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.QuizTemplate", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.User", b =>
                {
                    b.Navigation("UserPaths");
                });
#pragma warning restore 612, 618
        }
    }
}
