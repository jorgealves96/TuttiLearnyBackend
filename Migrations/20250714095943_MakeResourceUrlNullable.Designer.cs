// <auto-generated />
using System;
using LearningAppNetCoreApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LearningAppNetCoreApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250714095943_MakeResourceUrlNullable")]
    partial class MakeResourceUrlNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LearningAppNetCoreApi.Models.LearningPath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("integer")
                        .HasColumnName("category");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("GeneratedFromPrompt")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("generated_from_prompt");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_learning_paths");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_learning_paths_user_id");

                    b.ToTable("learning_paths", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("PathItemId")
                        .HasColumnType("integer")
                        .HasColumnName("path_item_id");

                    b.HasKey("Id")
                        .HasName("pk_notes");

                    b.HasIndex("PathItemId")
                        .HasDatabaseName("ix_notes_path_item_id");

                    b.ToTable("notes", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.PathItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_completed");

                    b.Property<int>("LearningPathId")
                        .HasColumnType("integer")
                        .HasColumnName("learning_path_id");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_path_items");

                    b.HasIndex("LearningPathId")
                        .HasDatabaseName("ix_path_items_learning_path_id");

                    b.ToTable("path_items", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PathItemId")
                        .HasColumnType("integer")
                        .HasColumnName("path_item_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<string>("Url")
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_resource");

                    b.HasIndex("PathItemId")
                        .HasDatabaseName("ix_resource_path_item_id");

                    b.ToTable("resource", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Auth0Id")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("auth0id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.LearningPath", b =>
                {
                    b.HasOne("LearningAppNetCoreApi.Models.User", "User")
                        .WithMany("LearningPaths")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_learning_paths_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.Note", b =>
                {
                    b.HasOne("LearningAppNetCoreApi.Models.PathItem", "PathItem")
                        .WithMany()
                        .HasForeignKey("PathItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_notes_path_items_path_item_id");

                    b.Navigation("PathItem");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.PathItem", b =>
                {
                    b.HasOne("LearningAppNetCoreApi.Models.LearningPath", "LearningPath")
                        .WithMany("PathItems")
                        .HasForeignKey("LearningPathId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_path_items_learning_paths_learning_path_id");

                    b.Navigation("LearningPath");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.Resource", b =>
                {
                    b.HasOne("LearningAppNetCoreApi.Models.PathItem", "PathItem")
                        .WithMany("Resources")
                        .HasForeignKey("PathItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_resource_path_items_path_item_id");

                    b.Navigation("PathItem");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.LearningPath", b =>
                {
                    b.Navigation("PathItems");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.PathItem", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("LearningAppNetCoreApi.Models.User", b =>
                {
                    b.Navigation("LearningPaths");
                });
#pragma warning restore 612, 618
        }
    }
}
